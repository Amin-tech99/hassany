[build]
builder = "nixpacks"

[deploy]
startCommand = "npm run start"
healthcheckPath = "/"
healthcheckTimeout = 100

[phases.setup]
cmds = [
  "apt-get update",
  "apt-get install -y software-properties-common",
  "add-apt-repository -y ppa:deadsnakes/ppa",
  "apt-get update",
  "apt-get install -y python3.10 python3.10-dev python3.10-distutils python3.10-venv python3-pip libsndfile1 libopenblas-dev libsamplerate0 ffmpeg",
  "ln -sf /usr/bin/python3.10 /usr/bin/python3",
  "ln -sf /usr/bin/python3.10 /usr/bin/python",
  "update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1",
  "update-alternatives --install /usr/bin/python python /usr/bin/python3.10 1",
  "python3 -m pip install --upgrade pip setuptools wheel",
  "echo 'Python installation:' && which python3 && python3 --version",
  "echo 'Python symlink:' && ls -la /usr/bin/python*",
  "echo 'PATH environment:' && echo $PATH",
  "mkdir -p /root/.cache/torch/hub/snakers4_silero-vad_master",
  "export PATH=$PATH:/usr/bin"
]

[phases.install]
cmds = [
  "npm config set registry https://registry.npmjs.org/",
  "npm config set strict-ssl false",
  "npm config set legacy-peer-deps true",
  "npm install --no-audit --no-fund --prefer-offline --legacy-peer-deps --force",
  "python3 -m pip install --upgrade pip",
  "python3 -m pip install torch==2.0.1 torchaudio==2.0.2 numpy==1.24.3 --extra-index-url https://download.pytorch.org/whl/cpu",
  "python3 -m pip install -r requirements.txt",
  "python3 -m pip install -r server/requirements.txt",
  "python3 -m pip install librosa==0.10.1 soundfile==0.12.1 numba==0.58.1 scipy==1.11.4 resampy==0.4.2 requests==2.31.0",
  "python3 -c \"import torch; print('Torch version:', torch.__version__); print('Torch hub dir:', torch.hub.get_dir())\"",
  "python3 -c \"import sys; print('Python executable:', sys.executable); print('Python version:', sys.version); print('Python path:', sys.path)\"",
  "echo 'Testing VAD dependencies...' && python3 -c \"import torch; import torchaudio; import soundfile; import librosa; import numpy; print('All VAD dependencies successfully imported!')\""
]

[phases.build]
cmds = [
  "npm run build"
]

[mounts]
source = "/data"
destination = "/app/uploads"

[env]
PYTHONPATH = "/app"
PATH = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/python3.10:/usr/bin/python3:/usr/bin/python"